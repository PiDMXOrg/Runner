name: PiDMX
on: workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  QT_VERSION: 6.6.2

jobs:
  buildMacOS:
    name: MacOS
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: source
          submodules: recursive
          fetch-depth: 0

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Download Qt (desktop)
        id: qt-desktop
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==2.1.*
          version: ${{ env.QT_VERSION }}
          modules: qtserialport
          set-env: true

      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v1
        with:
          host: github.com
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Cloning PiDMX switching to develop
        working-directory: source
        run: |
          cd ..
          git clone git@github.com:PiDMXOrg/PiDMX.git
          cd PiDMX
          git checkout develop
          cd ../source

      - name: Cloning PiDMX Common and switching to develop
        working-directory: source
        run: |
          cd ..
          git clone git@github.com:PiDMXOrg/PiDMX_Common.git
          cd PiDMX_Common
          git checkout develop
          cd ../source

      - name: Downloading KDabDockWIdgets 2.0
        working-directory: source
        run: |
          cd ..
          wget https://github.com/KDAB/KDDockWidgets/releases/download/v2.0.0/kddockwidgets-2.0.0.tar.gz
          tar -xvf kddockwidgets-2.0.0.tar.gz
          cd kddockwidgets-2.0.0
          cd ../source

      - name: Building KDabDockWIdgets 2.0
        working-directory: source
        run: |
          cd ../kddockwidgets-2.0.0
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_INSTALL_PREFIX=../../KDDockWidgets_out -DKDDockWidgets_QTQUICK=ON -DKDDockWidgets_QT6=ON -DCMAKE_BUILD_TYPE=Release -DKDDockWidgets_DEVELOPER_MODE=OFF -DKDDockWidgets_EXAMPLES=OFF -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" ../
          cmake --build .
          cmake --build . --target install
          cd ../../source

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          working-directory: source/../PiDMX

      - name: Build
        working-directory: source/../PiDMX
        env:
          MATCH_PASSWORD: ${{ secrets.PiDMX_MATCH_PASSWORD }}
        run: |
          export FL_RUN_CMAKE_XCODE_PATH="${MD_APPLE_SDK_ROOT}"
          export QT_HOST_PATH="$(readlink -f "$Qt6_DIR/../macos")"
          bundle exec fastlane mac app_store

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-package
          path: PiDMX/fastlane/build/macos_qt6/PiDMX.ipa

  buildWindows:
    name: Windows
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: source
          submodules: recursive
          fetch-depth: 0

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Download Qt (desktop)
        id: qt-desktop
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==2.1.*
          version: ${{ env.QT_VERSION }}
          modules: qtserialport
          set-env: true
          arch: "win64_mingw"
          tools: 'tools_ifw'

      - name: Test path
        working-directory: source
        run: |
          ls ${{ env.IQTA_TOOLS }}
          ls ${{ env.IQTA_TOOLS }}/QtInstallerFramework
          ls ${{ env.IQTA_TOOLS }}/QtInstallerFramework/4.7/bin

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Cloning PiDMX switching to develop
        working-directory: source
        run: |
          cd ..
          git clone git@github.com:PiDMXOrg/PiDMX.git
          cd PiDMX
          git checkout develop
          cd ../source

      - name: Cloning PiDMX Common and switching to develop
        working-directory: source
        run: |
          cd ..
          git clone git@github.com:PiDMXOrg/PiDMX_Common.git
          cd PiDMX_Common
          git checkout develop
          cd ../source

      - name: Downloading KDabDockWIdgets 2.0
        working-directory: source
        run: |
          cd ..
          curl -LO https://github.com/KDAB/KDDockWidgets/releases/download/v2.0.0/kddockwidgets-2.0.0.zip
          dir
          7z x kddockwidgets-2.0.0.zip
          cd kddockwidgets-2.0.0
          cd ../source

      - name: Building KDabDockWIdgets 2.0
        working-directory: source
        run: |
          cd ../kddockwidgets-2.0.0
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_PREFIX_PATH=%Qt6_DIR% -DKDDockWidgets_QTQUICK=ON -DCMAKE_INSTALL_PREFIX="./../../KDDockWidgets_out" -DKDDockWidgets_QT6=ON -DCMAKE_BUILD_TYPE=Release -DKDDockWidgets_DEVELOPER_MODE=OFF -DKDDockWidgets_EXAMPLES=OFF ../
          cmake --build .
          cmake --build . --target install
          cd ../../source
        env:
          CC: gcc
          CXX: g++

      - name: Build (Release)
        working-directory: source
        run: |
          cd ../PiDMX
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_PREFIX_PATH=%Qt6_DIR% -S . -B "./build" -G "MinGW Makefiles"
          cmake --build ./build
        env:
          CC: gcc
          CXX: g++
          
      - name: Deploying
        working-directory: source
        run: |
          mkdir ../PiDMX/build/deploy
          cp -r ../PiDMX/Resources/Windows/installer/* ../PiDMX/build/deploy
          cd ../PiDMX/build
          mkdir ./deploy/packages/net.pidmx.pidmx/data
          cp -r ./FixtureLibrary ./deploy/packages/net.pidmx.pidmx/data
          cp -r ./Translations ./deploy/packages/net.pidmx.pidmx/data
          mv ./PiDMX.exe ./deploy/packages/net.pidmx.pidmx/data/PiDMX.exe
          mv ./src/libPiDMXLib.dll ./deploy/packages/net.pidmx.pidmx/data/libPiDMXLib.dll
          mv ./../../KDDockWidgets_out/bin/libkddockwidgets-qt62.dll ./deploy/packages/net.pidmx.pidmx/data/libkddockwidgets-qt62.dll
          mv ./src/Qt-Secret/src/libQt-Secret.dll ./deploy/packages/net.pidmx.pidmx/data/libQt-Secret.dll
          mv ./src/Qt-Secret/src/mini-gmp/src/libQtBigint.dll ./deploy/packages/net.pidmx.pidmx/data/libQtBigint.dll
          cd deploy
          windeployqt ./packages/net.pidmx.pidmx/data/PiDMX.exe --qmldir=./../../src/QML/Views --compiler-runtime
          windeployqt ./packages/net.pidmx.pidmx/data/libPiDMXLib.dll --qmldir=./../../src/QML/Views --compiler-runtime
          windeployqt ./packages/net.pidmx.pidmx/data/libkddockwidgets-qt62.dll --qmldir=./../../src/QML/Views --compiler-runtime
          windeployqt ./packages/net.pidmx.pidmx/data/libQt-Secret.dll --qmldir=./../../src/QML/Views --compiler-runtime
      
      - name: Creating Installer
        working-directory: source
        run: |
          cd ../PiDMX/build/deploy
          ls ${{ env.IQTA_TOOLS }}/QtInstallerFramework
          ${{ env.IQTA_TOOLS }}/QtInstallerFramework/4.7/bin/binarycreator -c config\config.xml -p packages PiDMX.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v2.1.4
        with:
          name: pidmx-windows
          path: |
            D:/a/Runner/Runner/PiDMX/build/deploy/PiDMX.exe
  
  buildRaspberryPi:
    name: RaspBerry Pi
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: source
          submodules: recursive
          fetch-depth: 0

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Download Qt (desktop)
        id: qt-desktop
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==2.1.*
          version: ${{ env.QT_VERSION }}
          modules: qtserialport
          set-env: true

      - name: Preparing Linux
        working-directory: source
        run: |
          sudo apt-get install make cmake build-essential libclang-dev clang ninja-build gcc git bison python3 gperf pkg-config libfontconfig1-dev libfreetype6-dev libx11-dev libx11-xcb-dev libxext-dev libxfixes-dev libxi-dev libxrender-dev libxcb1-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-util-dev libxcb-xinerama0-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev libatspi2.0-dev libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev
          sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v1
        with:
          host: github.com
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Cloning PiDMX switching to develop
        working-directory: source
        run: |
          cd ..
          git clone git@github.com:PiDMXOrg/PiDMX.git
          cd PiDMX
          git checkout develop
          cd ../source

      - name: Downloading RaspBerry Pi SysRoot
        working-directory: source
        run: |
          cd ..
          echo "Downloading RaspBerry Pi SysRoot..."
          wget -q https://pidmx.net/PiDMX/rpi-sysroot.tar.xz
          echo "Extracting RaspBerry Pi SysRoot..."
          tar -xf rpi-sysroot.tar.xz
          rm rpi-sysroot.tar.xz

      - name: Download Qt Sources
        working-directory: source
        run: |
          cd ..
          echo "Downloading Qt Sources..."
          wget -q https://download.qt.io/archive/qt/6.6/${{ env.QT_VERSION }}/single/qt-everywhere-src-${{ env.QT_VERSION }}.tar.xz
          echo "Extacting Qt Sources..."
          tar -xf qt-everywhere-src-${{ env.QT_VERSION }}.tar.xz          
          rm qt-everywhere-src-${{ env.QT_VERSION }}.tar.xz
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qt3d 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtcharts 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtconnectivity 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtdatavis3d 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtgraphs 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtgrpc 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qthttpserver 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtimageformats 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtlanguageserver 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtlocation 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtlottie 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtmultimedia 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtnetworkauth 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtpositioning 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtquick3dphysics 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtquickeffectmaker 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtremoteobjects 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtscxml 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtsensors 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtserialbus 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtspeech 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtvirtualkeyboard 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtwebchannel 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtwebengine 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtwebsockets 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtwebview  
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qt5compat 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtquick3d 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtquicktimeline 
          rm -r qt-everywhere-src-${{ env.QT_VERSION }}/qtshadertools 
          ls
          pwd

      - name: Configuring Qt Sources for Raspberry Pi
        working-directory: source
        run: |
          cd ..
          mkdir raspi-build
          cd raspi-build
          ../qt-everywhere-src-${{ env.QT_VERSION }}/configure -release -opengl es2 -skip qt3d -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtgraphs -skip qtgrpc -skip qthttpserver -skip qtimageformats -skip qtlanguageserver -skip qtlocation -skip qtlottie -skip qtmultimedia -skip qtnetworkauth -skip qtpdf -skip qtpositioning -skip qtquick3dphysics -skip qtquickeffectmaker -skip qtremoteobjects -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtspeech -skip qtvirtualkeyboard -skip qtwebchannel -skip qtwebengine -skip qtwebsockets -skip qtwebview -skip debug_info -skip qt5compat -skip qtquick3d -skip qtquicktimeline -skip qtshadertools -skip qtwaylandcompositor -nomake examples -nomake tests -qt-host-path $Qt6_DIR -extprefix ~/qt/qt-raspi -prefix ~/qt/qt${{ env.QT_VERSION }}-raspi -device linux-rasp-pi4-aarch64 -device-option CROSS_COMPILE=aarch64-linux-gnu- -- -DCMAKE_TOOLCHAIN_FILE=../PiDMX/Resources/RaspBerryPi/rpi_toolchain.cmake -DQT_FEATURE_xcb=ON -DFEATURE_xcb_xlib=ON -DQT_FEATURE_xlib=ON -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON

      - name: Building Qt Sources for RaspBerry Pi
        working-directory: source
        run: |
          cd ../raspi-build
          cmake --build . --parallel

      - name: Installing Qt Sources for RaspBerry Pi
        working-directory: source
        run: |
          cd ../raspi-build
          cmake --install .

      - name: Cloning PiDMX Common and switching to develop
        working-directory: source
        run: |
          cd ..
          git clone git@github.com:PiDMXOrg/PiDMX_Common.git
          cd PiDMX_Common
          git checkout develop

      - name: Downloading KDabDockWIdgets 2.0
        working-directory: source
        run: |
          cd ..
          wget https://github.com/KDAB/KDDockWidgets/releases/download/v2.0.0/kddockwidgets-2.0.0.tar.gz
          tar -xvf kddockwidgets-2.0.0.tar.gz
          rm kddockwidgets-2.0.0.tar.gz

      - name: Building KDabDockWIdgets 2.0
        working-directory: source
        run: |
          cd ../kddockwidgets-2.0.0
          mkdir build
          cd build
          ~/qt/qt-raspi/bin/qt-cmake -G Ninja -DCMAKE_INSTALL_PREFIX=../../KDDockWidgets_out -DKDDockWidgets_QTQUICK=ON -DKDDockWidgets_QT6=ON -DCMAKE_BUILD_TYPE=Release -DKDDockWidgets_DEVELOPER_MODE=OFF -DKDDockWidgets_EXAMPLES=OFF -DCMAKE_OSX_ARCHITECTURES="arm64" ../
          cmake --build .
          cmake --build . --target install
          cd ../../source

      - name: Build (Release)
        working-directory: source
        run: |
          cd ../PiDMX
          ~/qt/qt-raspi/bin/qt-cmake -G Ninja -B "./build" -DCMAKE_TOOLCHAIN_FILE=./Resources/RaspBerryPi/rpi_toolchain.cmake
          cmake --build ./build
        env:
          CC: gcc
          CXX: g++

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-package
          path: PiDMX/fastlane/build/macos_qt6/PiDMX.ipa
